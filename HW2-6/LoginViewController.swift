//
//  ViewController.swift
//  HW2-6
//
//  Created by Pavel Dolgopolov on 17.02.2024.
//

import UIKit

final class LoginViewController: UIViewController, UITextFieldDelegate {
    
    //MARK: - IBOutlet
    @IBOutlet var mainStackCenterY: NSLayoutConstraint!
    
    @IBOutlet var userNameField: UITextField!
    @IBOutlet var passwordField: UITextField!
    
    @IBOutlet var loginButton: UIButton!
    
    @IBOutlet var remindNameButton: UIButton!
    @IBOutlet var remindPasswordButton: UIButton!
    
    //MARK: - Private Properties
    private let user = "User"
    private let password = "123"
    
    // MARK: - Initializers
    override func viewDidLoad() {
        super.viewDidLoad()
        
        passwordField.delegate = self
        userNameField.delegate = self
        
        passwordField.setSetting()
        userNameField.setSetting()
        
        passwordField.isSecureTextEntry = true
        
        loginButton.layer.cornerRadius = 5 //—Å–∫—Ä—É–≥–ª—è–µ–µ–º –∫–Ω–æ–ø–∫—É
    }
    
    override func viewWillLayoutSubviews() {
        
        setViewColor()
        setupActionKeyboard()
        
    }
    
    // MARK: - Overrides Methods
    //—Å–æ–±—ã—Ç–∏–µ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ WelcomeViewController, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–Ω
    override func shouldPerformSegue(withIdentifier identifier: String, sender: Any?) -> Bool {
        
        return check–°redentials()
    }
    
    // —Å–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ —Ç–∞–ø–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        super.touchesBegan(touches, with: event)
        self.view.endEditing(true)
    }
    
    // –ø–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—Å—Ç –≤ welcomeView
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        let welcomeView = segue.destination as? WelcomeViewController
        
        welcomeView?.greetingText = userNameField.text
    }
    
    // MARK: - IBAction
    // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ª–æ–≥–∏–Ω–∞ / –ø–∞—Ä–æ–ª—è
    @IBAction func remindUserOrPassword(sender: UIButton) {
        sender == remindNameButton ?
        showAlert(
            withTitle: "Oops!",
            andMessage: "Your name is \(user) üòâ",
            clearFields: false
        ) :
        showAlert(
            withTitle: "Oops!",
            andMessage: "Your password is \(password) üòâ",
            clearFields: false
        )
    }
    
    // –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ welcomeView
    //
    @IBAction func unwind(for segue: UIStoryboardSegue ) {
        userNameField.text = ""
        passwordField.text = ""
    }
    
    // MARK: - Public Methods
    // ¬†—Å–æ–±—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ enter
    // –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –ø—Ä–∏—Å–≤–æ–∏—Ç—å –¥–µ–ª–µ–≥–∞—Ç –∏ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª
    // UITextFieldDelegate –∏ textField.delegate = self
    func textFieldShouldReturn(_ textField: UITextField) -> Bool
    {
        if check–°redentials() { // –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å–µ–≥–≤–µ—é mainSegue
            performSegue(withIdentifier: "mainSegue", sender: self)
        }
        return true
    }
    
    // MARK: - Private Methods

    // –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–Ω / –ø–∞—Ä–æ–ª—å
    private func check–°redentials() -> Bool {
        guard userNameField.text != "" else { userNameField.alarm()
            return false
        }
        
        guard passwordField.text != "" else { passwordField.alarm()
            return false
        }

        guard userNameField.text == user, passwordField.text == password else {
            showAlert(
                withTitle: "Invalid login or password!",
                andMessage: "Please, enter correct login and password",
                clearFields: true
            )
            return false
        }
        return true
    }
    
    // –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∞–ª–µ—Ä—Ç–∞
    private func showAlert(
        withTitle title: String,
        andMessage message: String,
        clearFields: Bool){
          
            let alert = UIAlertController(
                title: title, message: message, preferredStyle: .alert
            )
            let okAction = UIAlertAction(title: "OK", style: .default) {  _ in
                if clearFields {
                   // self.userNameField.text = ""
                    self.passwordField.text = ""
                }
            }
            alert.addAction(okAction)
            present(alert, animated: true)
        }
}

extension UITextField {
    
    func setBorderColor() {
        layer.borderColor = self.traitCollection.userInterfaceStyle == .light ? UIColor.systemGray4.cgColor : UIColor.link.cgColor
        
        layer.borderWidth = 1.0
        layer.cornerRadius = 5.0
    }
    
    func setSetting() {
        
        //delegate = self // –±–µ–∑ —ç—Ç–æ–≥–æ –∫–Ω–æ–ø–∫–∞ enter –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
        autocorrectionType = .no //–∞–≤—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞
        smartQuotesType = .no //–∑–∞–º–µ–Ω–∞ —Ç–∏–ø–∞ –∫–∞–≤—ã—á–µ–∫
        smartDashesType = .no //–∑–∞–º–µ–Ω–∞ —Ç–∏—Ä–µ
        smartInsertDeleteType = .no //–∞–≤—Ç–æ —É–¥./–¥–æ–±. –ø—Ä–æ–±–µ–ª–æ–≤
        keyboardType = .asciiCapable // –æ—Ç–∫–ª—é—á–∞–µ–º —Å–º–∞–π–ª–∏–∫–∏
        //—Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –≤–≤–æ–¥ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–≥–æ –∫–æ–¥–∞
        textContentType = .oneTimeCode
        //—Å–∫—Ä—ã—Ç—ã–µ —Å–∏–º–≤–æ–ª—ã –ø—Ä–∏ –≤–≤–æ–¥–µ
        //isSecureTextEntry = secureText
        
        //–±–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π, nil - —Å–∫—Ä—ã–≤–∞–µ–º.
        //–ú–æ–∂–µ—Ç –Ω–µ —Å–∫—Ä—ã–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ isSecureTextEntry = false –∏
        //textContentType –Ω–µ —Ä–∞–≤–Ω–æ .oneTimeCode –∏ –ø—Ä–∏ –Ω–µ –∑–∞–¥–∞–Ω–Ω–æ–º keyboardType = .asciiCapable
        inputAccessoryView = nil
        
        setBorderColor()
    }
    
    func alarm() {
        
        let feedbackGenerator = UINotificationFeedbackGenerator()
        feedbackGenerator.notificationOccurred(.error) // –≤–∏–±—Ä
        
        self.becomeFirstResponder() // —Ñ–æ–∫—É—Å
        // —Ü–≤–µ—Ç —Ä–∞–º–∫–∏ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        UIView.animate(withDuration: 0.5) {
            self.layer.borderColor = UIColor.red.cgColor
            self.layer.borderWidth = 1.0
            self.layer.cornerRadius = 5.0
        }
        // –≤–æ–∑–≤—Ä–∞—Ç –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Ü–≤–µ—Ç—É
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
            UIView.animate(withDuration: 0.5) {
                self.setBorderColor()
            }
        }
    }
}
